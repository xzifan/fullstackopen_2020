{"version":3,"sources":["services/persons.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","App","useState","list","setList","messageType","setMessageType","message","setMessage","useEffect","updateList","type","msg","persons","then","res","console","log","data","filter","setFilter","Filter","props","onChange","e","target","value","PersonForm","newName","setNewName","newNumber","setNewNumber","handleInput","name","onSubmit","preventDefault","names","map","person","i","indexOf","number","status","catch","error","window","confirm","updateNumber","Persons","handleDelete","index","key","onClick","Notification","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52a88b5a.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst deleteItem = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { \n  getAll: getAll, \n  create: create, \n  update: update,\n  deleteItem: deleteItem\n}","import ReactDOM from 'react-dom';\nimport React, { useEffect, useState } from 'react'\nimport persons from './services/persons'\nimport './index.css'\n\nconst App = () => {\n  const [list, setList] = useState([ ])\n  const [messageType,setMessageType] = useState('success')\n  const [message, setMessage] = useState('some thing happened...')\n  useEffect(()=>{\n    updateList()\n  },[])\n  const updateList = (type,msg)=>{\n    persons.getAll().then(res=>{\n      console.log(res.data)\n      setList(res.data)\n    }).then(()=>{\n      setMessage(msg)\n      setMessageType(type)\n    })\n  }\n\n  const [filter,setFilter] = useState('')\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messageType} />\n      <Filter setFilter={setFilter}/>\n\n      <h3>Add a new</h3>\n      <PersonForm \n        list={list}\n        updateList={updateList}\n      />\n\n      <h3>Numbers</h3>\n      <Persons \n        list={list} \n        filter={filter} \n        updateList={updateList}\n      />\n    </div>\n  )\n}\nconst Filter = (props)=>{\n  const setFilter = props.setFilter\n  const handleFilter = (e)=>{\n    setFilter(e.target.value)\n  }\n  return(<div>\n    filter shows with <input onChange={handleFilter}/>\n  </div>)\n}\n\nconst PersonForm =(props)=>{\n  let list = props.list\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const addNumber = (name,number)=>{\n    persons\n      .create({name:name,number:number})\n      .then(res=>{\n        if (res.status===201){\n          props.updateList(\"success\",\"Added \"+newName)\n        }\n      }).catch((error) =>{\n        console.log(error);\n        \n      });\n  }\n  const updateNumber = (id, name, number)=>{\n    let confirm = window.confirm(newName + \" is already added to phonebook, replace the old number with a new one?\")\n      if (confirm)\n        persons\n          .update(id,{name:name, number:number})\n          .then(props.updateList(\"success\",\"Updated \"+ name))\n          .catch(error=>{\n            props.updateList(\"error\",`Information of ${name} has already been removed from server`)\n          })\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let names = list.map((person, i) => person.name)\n    if (names.indexOf(newName) === -1) {\n      addNumber(newName,newNumber)\n    } else {\n      updateNumber(list[names.indexOf(newName)].id, newName, newNumber)\n    }\n  }\n  const handleInput = (e) => {\n    if (e.target.name === \"name\")\n      setNewName(e.target.value)\n    else if (e.target.name === \"number\")\n      setNewNumber(e.target.value)\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name: <input name=\"name\" type=\"text\" onChange={handleInput} />\n      </div>\n      <div>\n        number: <input name=\"number\" type=\"text\" onChange={handleInput} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = (props)=>{\n  const handleDelete = (e)=>{\n    let id = e.target.value\n    let name = e.target.name\n    console.log(id, name)\n    let confirm = window.confirm(`Delete ${name}?`)\n    if (confirm)\n      persons.deleteItem(id).then(()=>{\n        props.updateList(\"success\",\"Removed \"+name)\n      }).catch(error=>{\n        console.log(error)\n        props.updateList(\"error\",`Information of ${name} has already been removed from server`)\n      })\n  }\n  return <div>\n    {\n        props.list.map((person, index) => {\n          if (person.name.indexOf(props.filter)!==-1)\n            return <div key={index}>{person.name+\" \"+person.number} <button name={person.name} value={person.id} onClick={handleDelete}>delete</button></div>\n        })\n      }\n  </div>\n}\n\nconst Notification = ({ type ,message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={''+type}>\n      {message}\n    </div>\n  )\n}\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}